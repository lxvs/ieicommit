#!/bin/bash

declare -r template_file_name="ChangeHistoryTemplate.txt"
declare -r fci_file_name="farewell-commit-id"

ShowUsage(){
    echo "
Usage:
    inspurcommit [<option>]

Options:
    amend, export, exportall, init, template, usage"
}

ValidateTemplate(){
    if [ ! -e "$tempFn" ]
    then
        >&2 echo "${cRed}ERROR: Couldn't find template file $tempFn.$cSuf"
        exit 2
    fi
}

ValidateJgn(){
    which $jgn 1>/dev/null 2>&1
    if [ $? -ne 0 ]
    then
        echo "${cRed}ERROR: Coundn't find $jgn.$cSuf" >&2
        exit 3
    fi
}

ValidateHistoryField(){
    local value=$(cat "$tempFn" | grep "^$1:" | sed "s/^$1:\s*//")
    [ -z "$value" ] || return 0
    >&2 echo "${cRed}ERROR: Field '$1' of change history is empty.$cSuf"
    return 1
}

ValidateHistory(){
    ValidateHistoryField 'Tag#' || exit
    ValidateHistoryField 'Label#' || exit
    ValidateHistoryField 'Issue#' || exit
    ValidateHistoryField 'Scope' || exit
    ValidateHistoryField 'Severity' || exit
    ValidateHistoryField 'Category' || exit
    ValidateHistoryField 'Symptom' || exit
    ValidateHistoryField 'RootCause' || exit
    ValidateHistoryField 'Solution' || exit
}

CheckStage(){
    local diffname=$(git diff --cached --name-only)
    case "$diffname" in
        "")
            >&2 echo "${cRed}ERROR: There is no staged changes.
Stage changes to be committed with 'git add'.$cSuf"
            return 1
            ;;
        *"$template_file_name"*)
            [ "$1" == "template" ] && return 0
            if ! FindFile "$fci_file_name" 2>/dev/null
            then
                >&2 echo "${cRed}ERROR: It seems that you haven't initialize this repository.
Checkout the last commit that ARN'T commit with inspurcommit and use
command 'inspurcommit init'.$cSuf"
                return 1
            elif [ $(git log -1 --format="%H") == $(cat "$fci_file_name") ]
            then
                return 0
            fi
            git restore --staged "$template_file_name" > /dev/null
            >&2 echo "${cYlw}Warning: $template_file_name was staged. But was skipped.
If you intend to modify the template, use command 'inspurcommit template'.$cSuf"
            CheckStage
            return
            ;;
    esac
}

CheckFileAlreadyExists(){
    local filename="$1"
    [ -e "$filename" ] || return 0
    >&2 echo "${cRed}ERROR: File $filename already exists.$cSuf"
    return 1
}

FindFile(){
    local filename="$1"
    [ -e "$filename" ] && return 0
    >&2 echo "${cRed}ERROR: Couldn't find file $filename.$cSuf"
    return 1
}

Commit(){
    ValidateTemplate
    ValidateJgn
    ValidateHistory
    local jgn_content
    local summary=$(cat "$tempFn" | grep '^Solution:' | sed 's/^Solution:\s*//')
    local details
    if [ "$op" == "amend" ]
    then
        git reset --soft @^ || exit
        jgn_content=$($jgn)
        git reset --soft ORIG_HEAD
    else
        jgn_content=$($jgn)
    fi
    details=$(cat "$tempFn" <(echo "$jgn_content") | grep -v '^#\|^\s*$')
    git commit "$@" -m "$summary" -m "$details"
}

# Export a Change History
# $1: exclude-field: 'none', 'Scope'.
# $2: [ filename ]: Use "ChangeHistory[-All]-%h" if not specified.
Export(){
    local currhash
    local chfn
    local fci
    local mode
    local ch_content
    FindFile "$fci_file_name" || return
    fci=$(cat "$fci_file_name")
    if [ "$1" == "none" ] || [ ! "$1" ]; then
        mode="all"
        ch_content=$(git log "$fci".. --format="%b" | sed '/^Change-Id:\s\w\{41\}$/,+1d')
    else
        mode="notall"
        ch_content=$(git log $(cat "$fci_file_name").. --format="%b" | grep -v "^$1:" | sed '/^Change-Id:\s\w\{41\}$/,+1d')
    fi
    if [ ! "$ch_content" ]; then
        >&2 echo "${cRed}ERROR: Nothing to export.$cSuf"
        return 1
    fi
    currhash=$(git log -1 --format='%h')
    case "$mode" in
        "all")
            chfn=${2:-"ChangeHistory-All-${currhash}.txt"}
            ;;
        "notall")
            chfn=${2:-"ChangeHistory-${currhash}.txt"}
            ;;
        *)
            DebugReport "Export mode is neither all nor notall."
            ;;
    esac
    CheckFileAlreadyExists "$chfn" || return
    echo "$ch_content" > "$chfn"
    echo "${cGrn}Exported file $chfn$cSuf"
    return
}

DebugReport(){
    >&2 echo "${cYlw}Warning: $1
You've just met a debug warning.
If it's not inconvenient, please contact $author on this issue, or create an issue on $issuelink. Thanks!$cSuf"
}

declare -r rev='0.2.0'
declare -r lastupdt='2021-07-21'
declare -r author='Johnny Appleseed <liuzhaohui@inspur.com>'
declare -r issuelink='https://github.com/islzh/jg/issues/new'
declare -r jgn="jgnumberforthehistory"
declare -r tempFn=$template_file_name
declare -r cRed="[91m"
declare -r cGrn="[92m"
declare -r cYlw="[93m"
declare -r cSuf="[0m"

declare -r op="${1,,}"
case "$op" in
    "?"|"-?"|"-h"|"--help"|"--usage"|"help"|"usage")
        echo
        echo "    inspurcommit v$rev"
        echo "    Last updated: $lastupdt"
        echo "    $author"
        ShowUsage
        exit
        ;;
    ""|"-"*)
        git rev-parse || exit
        CheckStage || exit
        Commit "$@"
        ;;
    "amend")
        git rev-parse || exit
        shift
        Commit --amend "$@"
        ;;
    "export")
        git rev-parse || exit
        shift
        Export "Scope" "$@"
        ;;
    "exportall")
        git rev-parse || exit
        shift
        Export "none" "$@"
        ;;
    "template")
        git rev-parse || exit
        shift
        CheckStage template || exit
        Commit "$@"
        ;;
    "init")
        git rev-parse || exit
        if [ ! -e ./.git ]; then
            >&2 echo "${cRed}ERROR: Please init in the root directory.$cSuf"
            exit 1
        fi
        CheckFileAlreadyExists "$fci_file_name" || exit
        CheckFileAlreadyExists "$template_file_name" || exit
        case "$(git status --porcelain)" in
            *".gitignore"*)
                >&2 echo "${cRed}Please commit or stash your local changes of file '.gitignore' before init.$cSuf"
                exit 1
                ;;
        esac
        git log --format="%H" -1 > "$fci_file_name" && \
            cp $(dirname "$0")/"$template_file_name" ./ && \
            echo "/ChangeHistory-*.txt" >> .gitignore && \
            git add "$template_file_name" "$fci_file_name" .gitignore && \
            echo "${cGrn}Initialization completed successfully.$cSuf
You can fill the change history template now and commit this initialization
using command 'inspurcommit', or commit it along with next code changes."
        ;;
    *)
        >&2 echo "${cRed}ERROR: Invalid option - $1$cSuf"
        >&2 ShowUsage
        exit 1
        ;;
esac
